# Glossary

## A

* **Architectural Epic** - Architectural epics are large, typically cross cutting technology initiatives that are necessary to evolve solutions to support current and future business needs.

## B

* **Business Epic** - Business epics are large, typically cross cutting, customer facing initiatives that encapsulate the new development to realize certain business benefits.

## D

* **Distributed Cache** - Within distributed cache elements are distributed across a set of server and the size of the cache is the sum of cache partitions. Distributed cache can scale horizontally by adding more servers.
## E

* **Epic** - There are 2 kind of epics, business epics and architectural epics.

## F

* **Feature** - Features are services provided by the system that fulfill one or more stakeholder needs. Features are a central part of Agile and often come from the breakdown of Epics. Features live at a level above specific requirements and bridge the gap from the problem domain (understanding the needs of the user and stakeholders) to the solution domain (specific requirements and acceptance criteria). The attributes of a feature may include:
    *The feature* - A short 1-3 word title summarizing the feature
    *The benefit* - A short description which elaborates the feature and describes the value to the user. There may be multiple benefits per feature.

## L

* **Local Cache** - Within this type of cache all elements are stored in local memory and the size of the cache is limited by a single JVM's heap.

## T

* **Transaction** - A transaction is a set of related interactions (or operations) that may need to be cancelled after they where executed. These operations can be at different geographical located services.
## U

* **User story** - Traditionally expressing intended system behavior has been captured in software requirements specifications. In agile this traditional document is replaced by a series of stories which express the intent of the system. Stories are small, independent behaviors that can be implemented incrementally, each of which provides some value to the user. The recommended form of expressing a user story is the user voice form, and it appears as follows: As a *user role* I can *activity* so that *business value*
